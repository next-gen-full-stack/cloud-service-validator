buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'org.springframework.boot' version '2.0.5.RELEASE'
    id 'com.github.sherter.google-java-format' version '0.7.1'
	id 'java'
}

apply plugin: 'java'
// apply plugin: 'war'
apply plugin: 'io.spring.dependency-management'

jar {
	baseName = 'cloud-validator'
	version =  '0.0.1-SNAPSHOT'
}

// war {
//   baseName = 'cloud-validator'
// 	version =  '0.0.1-SNAPSHOT'
// }

repositories {
	jcenter()
}

repositories {
	mavenCentral()
}

sourceSets {
    addtionals {
        java {
            srcDirs 'build/generated/source/apt/main'
        }
    }
}

configurations {
    systemTestCompile.extendsFrom testCompile
    systemTestRuntime.extendsFrom testRuntime
}

dependencies {
  compile fileTree(dir: 'libs', include:['*.jar'])
  compile ('io.lettuce:lettuce-core:5.1.0.RELEASE')
  compile ('org.mongodb:mongodb-driver:3.6.4')
  compile("org.springframework.boot:spring-boot-starter-web")
  compile("org.springframework.boot:spring-boot-starter-thymeleaf")
  compile("org.springframework.boot:spring-boot-starter-actuator")
  compile('org.springframework.boot:spring-boot-starter-jdbc')
  compile('mysql:mysql-connector-java')
  compile('org.postgresql:postgresql')
  compile('org.apache.kafka:kafka-clients:0.10.0.0')
  compile files('lib/ons-client-1.7.8.Final.jar')
  testCompile("org.springframework.boot:spring-boot-starter-test")

  // Use 'api' rather than 'compile' for Android or java-library projects.
  compile             "com.google.auto.value:auto-value-annotations:1.6.2"
  annotationProcessor "com.google.auto.value:auto-value:1.6.2"
  
    // https://mvnrepository.com/artifact/com.microsoft.azure/azure-storage
  compile group: 'com.microsoft.azure', name: 'azure-storage', version: '4.2.0'

  compile group: 'com.cloudant', name: 'cloudant-client', version: '2.13.1'

  compile 'com.windowsazure:Notification-Hubs-java-sdk:0.0.4'
  compile group: 'com.aliyun', name: 'aliyun-java-sdk-push', version: '3.10.0'
  compile group: 'com.aliyun', name: 'aliyun-java-sdk-core', version: '3.2.8'
  compile group: 'com.aliyun.api.gateway', name: 'sdk-core-java', version: '1.1.0'

  // https://mvnrepository.com/artifact/com.microsoft.azure/azure-storage
  compile group: 'com.microsoft.azure', name: 'azure-storage', version: '4.2.0'
  // https://mvnrepository.com/artifact/commons-codec/commons-codec
  compile group: 'commons-codec', name: 'commons-codec', version: '1.11'
  // https://mvnrepository.com/artifact/com.aliyun.oss/aliyun-sdk-oss
  compile group: 'com.aliyun.oss', name: 'aliyun-sdk-oss', version: '3.3.0'
  // https://mvnrepository.com/artifact/com.aliyun/aliyun-java-sdk-core
  compile group: 'com.aliyun', name: 'aliyun-java-sdk-core', version: '4.1.0'
  // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
  compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'
  // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpmime
  compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.6'
  runtime 'org.springframework.boot:spring-boot-starter-tomcat'
}

bootJar {
    archiveName = "app.jar"
}

// bootWar {
//     archiveName = "app.war"
// }

task codeTest(type: Test) {
    testClassesDirs = sourceSets.addtionals.output.classesDirs
    classpath = sourceSets.addtionals.runtimeClasspath
    outputs.upToDateWhen { false }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven{
            url "https://maven.google.com"
        }
    }
}

check.dependsOn codeTest